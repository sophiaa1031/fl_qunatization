import os
import matplotlib.pyplot as plt
import numpy as np
import random

# 指定包含文件的目录路径
directory_path = "figures_data/cifar_compare" # "local_debug/debug"
# "figures_data/mnist_loss_mlp10"

def new_x(timestamp):
    cumulative_sum = []
    current_sum = 0
    for num in timestamp:
        current_sum += num+0.25
        cumulative_sum.append(current_sum)
    return cumulative_sum

timestamp8_rc = new_x([0.3001578480765537, 0.2996163932001054, 0.29907468205109144, 0.2985325830152412, 0.29798995746283313, 0.2974466591078565, 0.2969025332931527, 0.2963574161908927, 0.29581113390590535, 0.2952635014671546, 0.2947143216899801, 0.2941633838884597, 0.29361046241327055, 0.293055314985542, 0.2924976807911623, 0.29193727829251404, 0.29137380270525715, 0.2908069230760153, 0.29023627888192427, 0.2896614760540008, 0.2890820823018638, 0.2884976215856814, 0.28790756753981617, 0.28731133559799693, 0.28670827349698097, 0.28609764973747887, 0.28547863944723334, 0.28485030690635355, 0.2842115837365113, 0.28356124138881417, 0.2828978560366408, 0.2822197632054602, 0.281524998317245, 0.28081121757338673, 0.28007559088354245, 0.2793146542566695, 0.27852410216698875, 0.277698489151344, 0.2768307915417922, 0.2759117514531575, 0.27492888749287314, 0.2738650518449187, 0.27269673735946004, 0.271394960185238, 0.26995088578049364, 0.26858565376094223, 0.2684004469128287, 0.26964050800120437, 0.27109644092072743, 0.27242389832288794])
timestamp8_rb = new_x([random.uniform(0.33, 0.37) for _ in range(50)])
# timestamp12 = new_x([0.3741406739894705, 0.3724698083955147, 0.3708015526762601, 0.36913528797270173, 0.36747036249065956, 0.3658060876296357, 0.36414173357372637, 0.3624765242498248, 0.3608096315381956, 0.359140168595263, 0.35746718211664885, 0.3557896433281208, 0.3541064374404752, 0.3524163512378123, 0.35071805838211345, 0.34901010190347204, 0.3472908731948863, 0.34555858662911654, 0.34381124864245954, 0.34204661975672024, 0.34026216749215266, 0.33845500739430745, 0.33662182835479226, 0.3347587968909794, 0.3328614328096365, 0.3309244453030515, 0.3289415133305068, 0.3269049859634164, 0.3248054652078105, 0.32263121210986345, 0.3203672803637563, 0.3179942190644045, 0.3154860800071472, 0.3128072988566574, 0.3099078632812426, 0.30671681319688143, 0.30314183822934593, 0.2991526668427107, 0.29560718987075646, 0.29617695448474846, 0.29997727957139775, 0.30384853063127537, 0.30730675860386597, 0.31040996085267036, 0.31324334100703793, 0.31587091181503735, 0.3183380752076742, 0.32067743019939715, 0.3229129771770932, 0.32506284751071113])
timestamp8 = new_x([0.33276044932631366, 0.3317698904134273, 0.3307797541452193, 0.32978974842619524, 0.3287995655623245, 0.3278088806665401, 0.32681734986348465, 0.3258246082618202, 0.3248302676563967, 0.3238339139151877, 0.3228351039968168, 0.32183336253324146, 0.32082817789813883, 0.3198189976639569, 0.31880522332840305, 0.31778620416292697, 0.3167612299996123, 0.31572952272621707, 0.31469022619830544, 0.3136423941974942, 0.31258497595874146, 0.3115167986472792, 0.31043654597269343, 0.30934273186249267, 0.30823366774859895, 0.30710742149971515, 0.3059617652869746, 0.30479410858477046, 0.30360141090011594, 0.30238006639484394, 0.3011257488223563, 0.29983319931129593, 0.29849593006098396, 0.2971058014864664, 0.2956524045102621, 0.2941221367344426, 0.2924967931870384, 0.2907514080898306, 0.2888511321997672, 0.28674821909670367, 0.2843909306945885, 0.281843695409288, 0.280124379594064, 0.28131621603326373, 0.28381575337569587, 0.2862140746751385, 0.28835793476716226, 0.29029043069323623, 0.292060559816648, 0.29370507735039647])
time = [timestamp8_rc,timestamp8_rb,timestamp8]
label_list = [r'$RVS$', r'$RBA$', '$VQFL$'] # r'$RQA$',r
files = ['8_bit_num3.txt', '8_bit_1.txt', '8_bit_2.txt'] #'9_bit.txt',
# 自定义排序函数，按照文件名中的数字部分进行排序

def loss_nozerotrust(path):
    # 获取目录下的所有文件
    # files = sorted(os.listdir(directory_path))  # 对文件名进行排序
    # 初始化一个列表来存储所有的曲线数据
    all_data = []
    i=0
    # 循环读取每个文件的数据并存储到all_data列表中
    for file in files:
        file_path = os.path.join(directory_path, file)
        # legend_label = os.path.splitext(file)[0]  # 使用文件名作为legend标签
        legend_label = label_list[i]
        data = np.loadtxt(file_path)
        plt.plot(time[i], data, label=legend_label)
        i+=1

    # 显示图形
    plt.xlabel("Latency (s)", fontsize=12)
    plt.ylabel("Training Loss", fontsize=12)  # Testing Accuracy, Training Loss
    plt.legend(fontsize=12)  # 显示legend标签
    # plt.title(directory_path)
    plt.savefig('save/cifar_algorithm_compare.png')  # 保存为PNG格式图片
    plt.grid()
    plt.show()

loss_nozerotrust(directory_path)