import os
import matplotlib.pyplot as plt
import numpy as np

# 指定包含文件的目录路径
directory_path = "figures_data/cifar_iid_resnet20_le5_num6" # "local_debug/debug"
# "figures_data/mnist_loss_mlp10"

def new_x(timestamp):
    cumulative_sum = []
    current_sum = 0
    for num in timestamp:
        current_sum += num+0.25
        cumulative_sum.append(current_sum)
    return cumulative_sum

timestamp7 = new_x([0.3224153931605245, 0.3215756318668619, 0.32073598950482696, 0.3198962328646793, 0.31905611628260583, 0.3182153804120228, 0.3173737508442183, 0.31653093655523873, 0.31568662815165055, 0.3148404958826155, 0.3139921873793494, 0.31314132507520576, 0.31228750324992666, 0.3114302846295299, 0.3105691964581681, 0.3097037259392008, 0.30883331491845895, 0.30795735365161564, 0.30707517345748264, 0.30618603800685845, 0.3052891329279876, 0.30438355331873773, 0.30346828863367614, 0.30254220424896294, 0.3016040187812434, 0.30065227592162125, 0.2996853091017519, 0.29870119667388656, 0.29769770436324383, 0.2966722103850399, 0.2956216065597868, 0.2945421655958763, 0.29342935974255724, 0.2922776080604555, 0.29107991656435167, 0.2898273539911905, 0.2885082704804675, 0.28710711102755504, 0.2856026092733467, 0.28396519730491754, 0.2821545509287076, 0.2801269231932778, 0.27793117383985033, 0.2763778464928284, 0.2772857511741838, 0.27942824996939725, 0.2815129652943354, 0.2833791319030706, 0.2850601117115088, 0.28659818262741765])
timestamp8 = new_x([0.33276044932631366, 0.3317698904134273, 0.3307797541452193, 0.32978974842619524, 0.3287995655623245, 0.3278088806665401, 0.32681734986348465, 0.3258246082618202, 0.3248302676563967, 0.3238339139151877, 0.3228351039968168, 0.32183336253324146, 0.32082817789813883, 0.3198189976639569, 0.31880522332840305, 0.31778620416292697, 0.3167612299996123, 0.31572952272621707, 0.31469022619830544, 0.3136423941974942, 0.31258497595874146, 0.3115167986472792, 0.31043654597269343, 0.30934273186249267, 0.30823366774859895, 0.30710742149971515, 0.3059617652869746, 0.30479410858477046, 0.30360141090011594, 0.30238006639484394, 0.3011257488223563, 0.29983319931129593, 0.29849593006098396, 0.2971058014864664, 0.2956524045102621, 0.2941221367344426, 0.2924967931870384, 0.2907514080898306, 0.2888511321997672, 0.28674821909670367, 0.2843909306945885, 0.281843695409288, 0.280124379594064, 0.28131621603326373, 0.28381575337569587, 0.2862140746751385, 0.28835793476716226, 0.29029043069323623, 0.292060559816648, 0.29370507735039647])
timestamp9 = new_x([0.34310550549210284, 0.3419564382725696, 0.340808188308588, 0.33966039625130984, 0.3385126835701162, 0.33736465052146547, 0.33621587385535145, 0.3350659042167785, 0.3339142631913181, 0.332760439933544, 0.3316038873044216, 0.33044401742788476, 0.3292801965569582, 0.32811173911470415, 0.3269379007433735, 0.3257578701542831, 0.32457075951816217, 0.32337559306695607, 0.3221712934876787, 0.3209566655688775, 0.3197303763992194, 0.3184909311991451, 0.31723664356631, 0.3159655984976973, 0.3146756059615152, 0.3133641419467577, 0.3120282726868891, 0.3106645559279396, 0.30926891035095533, 0.30783644000041094, 0.3063611938583344, 0.30483582989003777, 0.3032511350957579, 0.30159532334829686, 0.299852982915293, 0.2980034652144757, 0.29601840126099727, 0.2938580551170031, 0.29146756665459483, 0.28878582564285415, 0.28587759495116016, 0.28389216677455764, 0.2852526875113148, 0.28810608730895343, 0.29083561389786666, 0.2932733804228936, 0.2954707606080744, 0.29748415210846313, 0.29935552602781385, 0.3011149566530381])
timestamp10 =  new_x([0.35345056165789207, 0.35213527451361726, 0.3508212964845725, 0.3495081918626004, 0.34819550169947733, 0.34688274125829177, 0.3455693971272551, 0.34425492393960455, 0.3429387406319136, 0.34162022615907295, 0.34029871456670874, 0.3389734892998633, 0.3376437765990756, 0.3363087377998004, 0.3349674603060237, 0.33361894695071603, 0.3322621033799536, 0.33089572299787834, 0.3295184688773953, 0.3281288518640594, 0.3267252038598817, 0.3253056449432091, 0.323868042520902, 0.32240996006002687, 0.3209285920164009, 0.3194206802228705, 0.31788240499186177, 0.31630924115110526, 0.31469576454761033, 0.3130353871688092, 0.3113199871171733, 0.3095393800357513, 0.30768054561081926, 0.3057264670640856, 0.30365435011792574, 0.301432860561105, 0.29901799416152275, 0.2963484183235415, 0.29335247407210213, 0.2900765475032816, 0.28769211161970754, 0.289055990321352, 0.29225753336545873, 0.29534056369188344, 0.2980924097693912, 0.30057097454771053, 0.3028410260666159, 0.3049506332391361, 0.3069341198853803, 0.30881634731996566])
timestamp32 = new_x([0.5810417973052546, 0.5741166893761637, 0.5672408874555461, 0.5604080658947332, 0.55361156868971, 0.5468443368920619, 0.5400988211863684, 0.5333668754930978, 0.5266396260553241, 0.5199073084938554, 0.5131590624904543, 0.5063826696458986, 0.49956421395802253, 0.4926876351244067, 0.4857341305581767, 0.478681339260394, 0.47150220353597666, 0.46416334194404063, 0.4566226577998189, 0.44882571045698527, 0.44070000706668033, 0.43214565758015766, 0.4230194470522465, 0.41310699785320476, 0.40207749920016694, 0.3894699426174608, 0.37566973709613427, 0.37156934428131844, 0.38360573072946647, 0.3965415437886889, 0.4079223884122946, 0.4180827850588437, 0.42737621155061967, 0.4360411372593273, 0.4442370589049105, 0.45207446107819094, 0.45963285203378673, 0.46697144621708087, 0.4741356765841602, 0.48116131133717105, 0.4880771491382659, 0.4949068405756859, 0.5016701543474609, 0.5083838796807274, 0.5150624838803106, 0.5217186009907846, 0.5283634014263927, 0.5350068760641751, 0.5416580577918141, 0.5483251966007557])
time = [timestamp7, timestamp8,timestamp9,timestamp10,timestamp32]
label_list = [r'$\epsilon=\epsilon_1$', r'$\epsilon=\epsilon_2$', r'$\epsilon=\epsilon_3$', r'$\epsilon=\epsilon_4$', 'Full-bits']
# 自定义排序函数，按照文件名中的数字部分进行排序

def custom_sort(file):
    # 从文件名中提取数字部分
    num_part = file.split("_")[0]  # 假设数字部分在文件名的开头，以"_"分隔
    num = int(num_part)
    return num

def loss_nozerotrust(path):
    # 获取目录下的所有文件
    files = sorted(os.listdir(directory_path), key=custom_sort)  # 对文件名进行排序
    # 初始化一个列表来存储所有的曲线数据
    all_data = []
    i=0
    # 循环读取每个文件的数据并存储到all_data列表中
    for file in files:
        file_path = os.path.join(directory_path, file)
        # legend_label = os.path.splitext(file)[0]  # 使用文件名作为legend标签
        legend_label = label_list[i]
        data = np.loadtxt(file_path)
        plt.plot(time[i], data, label=legend_label)
        i+=1

    # 显示图形
    plt.xlabel("Latency (s)", fontsize=12)
    plt.ylabel("Training Loss", fontsize=12)  # Testing Accuracy, Training Loss
    plt.legend(fontsize=12)  # 显示legend标签
    # plt.title(directory_path)
    # plt.savefig('save/cifar_iid_resnet20_50epoch.png')  # 保存为PNG格式图片
    plt.grid()
    plt.show()

loss_nozerotrust(directory_path)